name: Full Snyk Security Workflow for .NET

on:
  push:
  pull_request:

jobs:
  security:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          
      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --no-restore --configuration Release

      # Install Snyk CLI
      - name: Install Snyk CLI
        run: npm install -g snyk

      # Snyk Open Source Dependency Test
      - name: Snyk Open Source Test
        uses: snyk/actions/dotnet@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Snyk Code (Static Application Security Testing)
      - name: Snyk Code Test
        run: snyk code test --sarif-file-output=snyk-code.sarif || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk-code.sarif

      # Snyk Infrastructure as Code Test
      - name: Snyk IaC Test
        run: snyk iac test --report || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
